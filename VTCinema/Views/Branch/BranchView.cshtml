
@{
    ViewData["Title"] = "Branch";
    Layout = "~/Views/Shared/Master.cshtml";
}

<div class="pusher">
    <div class="navslide navwrap">
        <div class="row" style="background-color: white">
            <div class="ui form segment form3">
                <h2 class="ui center aligned header" style="border-top: 1px; font-family: 'Times New Roman'">
                    Danh Sách Chi Nhánh
                    <div class="sub header" style="font-family:'Times New Roman'">Danh Sách Các Chi Nhánh</div>
                </h2>
                <div class="four fields" style="margin: 0px;">
                    <div class="field">
                        <button style="display: inline;" class="ui blue button" data-value="fade up" onclick="event.preventDefault();return exportData_PunishEmployee();">Xuất File</button>
                        <button class="ui blueli button" data-value="fade up" onclick="return AddNewBranch()">Thêm mới</button>
                    </div>
                    <div class="field">
                        <div class="ui fluid search selection dropdown" id="Branch_ID" onchange="LoadData_PunishEmployee()">
                            <input type="hidden" name="branch" />
                            <input class="search" autocomplete="off" tabindex="0" />
                            <div class="default text">Chi Nhánh</div>
                            <div id="cbbBranch" class="menu" tabindex="-1">
                            </div>
                        </div>
                    </div>
                    <div class="field">
                        <div class="ui icon input" style="max-height: 40px;">
                            <input id="filterEmployee" type="text" placeholder="Seaching..." onkeyup="event.preventDefault();return onkeyupTicketFitler();">
                            <i class="circular search link icon"></i>
                        </div>
                    </div>
                    <div class="field">
                        <input class="flatpickr" id="dateFilter" type="text" placeholder="Select Date.." onchange="LoadData_PunishEmployee()" />
                    </div>
                </div>
                <div class="ui segment" style="border: none; overflow-x: auto; padding: unset;">
                    <table id="dtContentPunishEmployee" class="ui sortable celled table">
                        <thead class="hiddenCollapse">
                            <tr role="row">
                                <th style="display: none">ID</th>
                                <th style="width: 70px;">#</th>
                                <th>Mã Chi Nhánh</th>
                                <th style="min-width: 60px">Tên</th>
                                <th style="min-width: 150px" class="no-sort">Tên Viết Tắt</th>
                                <th style="max-width: 120px;">Địa Chỉ</th>
                                <th style="max-width: 120px;">Kinh Độ</th>
                                <th style="max-width: 120px;">Vĩ Độ</th>
                                <th style="max-width: 120px;"> Ghi Chú</th>
                                <th>Chỉnh sửa</th>
                            </tr>
                        </thead>
                        <tbody id="dtContentPunishEmployeeBody"></tbody>
                    </table>

                </div>
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">

    function Render_Branch(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td style="display:none !important">' + item.ID + '</td>'
                        + '<td data-sortValue="' + Number(i) + '">' + (i + 1) + '</td>'
                        + '<td ><a style="text-decoration: underline;" class="buttonEditClass" href="#">' + item.Name + '</a></td>'
                        + '<td >' + item.BranchCode + '</td>'
                        + '<td >' + item.ShortName + '</td>'
                        + '<td >' + item.Address + '</td>'
                        + '<td >' + item.Latitude + '</td>'
                        + '<td >' + item.Longtitude + '</td>'
                        + '<td >' + item.Note + '</td>'

                    stringContent = stringContent + '<tr class="seachRow" role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        //EventMainGrid();
        //Checking_TabControl_Permission();
    }

    function LoadBranch() {
        $.ajax({
            url: "branch/LoadBranch",
            dataType: "json",
            type: "POST",
            data: JSON.stringify({
            }),
            contentType: 'application/json; charset=utf-8',
            async: true,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                notiError();
            },
            success: function (result) {
                Render_Branch(result, "dtContentPunishEmployeeBody");
            }
        });
    }
    $(document).ready(function () {
        $('#dtContentPunishEmployee').tablesort();
        $("#dateFilter").flatpickr({
            mode: "range",
            dateFormat: 'd-m-Y',
            enableTime: false,
            onClose: function (selectedDates, dateStr, instance) {
                if (selectedDates.length == 1) {
                    instance.setDate([selectedDates[0], selectedDates[0]], true);
                }
            }
        });
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        //$("#dateFilter").val(formatDateClient(firstDay) + ' to ' + formatDateClient(lastDay));
        LoadBranch();
        //flagLoad = 1;
        //LoadData_PunishEmployee();
        //$('#dtContentPunishEmployee tbody').on('click', '.buttonEditClass', function () {
        //    let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
        //    EditPunish(ID);
        //});
        $('#dtContentPunishEmployee tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            
            EditTab(ID);
        });
    });

    function AddNewBranch() {
        document.getElementById("divDetailPopup").innerHTML = '';
        $("#divDetailPopup").load("BranchDetail/"+0);
        $('#divDetailPopup').modal('show');
        return false;
    }
    function EditTab(CurrentID) {
        document.getElementById("divDetailPopup").innerHTML = '';
        $("#divDetailPopup").load("BranchDetail/" + CurrentID);
        $('#divDetailPopup').modal('show');
        return false;
    }
    function exportData_PunishEmployee() {
        exportToExcel("dtContentPunishEmployee", 'Doanh-Sach-Nhan-Vien-Bi-Xu-Phat');
    }
</script>