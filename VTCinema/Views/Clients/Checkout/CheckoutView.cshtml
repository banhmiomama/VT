@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/ClientMaster.cshtml";
}

@section Style{
    <style>
        .plane {
            margin: 20px auto;
            max-width: 300px;
        }

        .cockpit {
            height: 250px;
            position: relative;
            overflow: hidden;
            text-align: center;
            border-bottom: 5px solid #d8d8d8;
        }

            .cockpit:before {
                content: "";
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                height: 500px;
                width: 100%;
                border-radius: 50%;
                border-right: 5px solid #d8d8d8;
                border-left: 5px solid #d8d8d8;
            }

            .cockpit h1 {
                width: 60%;
                margin: 100px auto 35px auto;
            }

        .exit {
            position: relative;
            height: 50px;
        }

            .exit:before, .exit:after {
                content: "EXIT";
                font-size: 14px;
                line-height: 18px;
                padding: 0px 2px;
                font-family: "Arial Narrow", Arial, sans-serif;
                display: block;
                position: absolute;
                background: green;
                color: white;
                top: 50%;
                transform: translate(0, -50%);
            }

            .exit:before {
                left: 0;
            }

            .exit:after {
                right: 0;
            }

        .fuselage {
            border-right: 5px solid #d8d8d8;
            border-left: 5px solid #d8d8d8;
        }

        ol {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .seats {
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            justify-content: flex-start;
            width: 100%;
        }

        .seat {
            display: flex;
            /*flex: 0 0 14.2857142857%;*/
            padding: 5px;
            position: relative;
            max-width: 50px;
        }

        .seats .seat:nth-child(1) {
            flex-grow: 1;
            margin-right: 30px;
        }

        .seat input[type="checkbox"] {
            position: absolute;
            opacity: 0;
        }

            .seat input[type="checkbox"]:checked + label {
                background: #44c020 !important;
                -webkit-animation-name: rubberBand;
                animation-name: rubberBand;
                animation-duration: 300ms;
                animation-fill-mode: both;
            }

            .seat input[type="checkbox"]:disabled + label {
                background: #ddd;
                text-indent: -9999px;
                overflow: hidden;
            }
            .seat input[type="checkbox"].selected:disabled + label {
                background: #e7eaec !important;
                opacity:0.8;
            }
                .seat input[type="checkbox"].selected:disabled + label:after {
                    cursor: not-allowed;
                }
                .seat input[type="checkbox"]:disabled + label:after {
                    content: "";
                    text-indent: 0;
                    position: absolute;
                    top: 4px;
                    left: 50%;
                    transform: translate(-50%, 0%);
                }

                .seat input[type="checkbox"]:disabled + label:hover {
                    box-shadow: none;
                    cursor: not-allowed;
                }

        .seat label {
            display: block;
            position: relative;
            width: 100%;
            text-align: center;
            font-size: 14px;
            font-weight: bold;
            line-height: 1.5rem;
            padding: 4px 0;
            background: #ffffff;
            border-radius: 5px;
            animation-duration: 300ms;
            animation-fill-mode: both;
        }

            .seat label:before {
                content: "";
                position: absolute;
                width: 75%;
                height: 75%;
                top: 1px;
                left: 50%;
                transform: translate(-50%, 0%);
                background: rgba(255, 255, 255, 0.4);
                border-radius: 3px;
            }

            .seat label:hover {
                cursor: pointer;
                box-shadow: 0 0 0px 2px #5c6aff;
            }

        .AddNewRowChair {
            padding: 0;
            border: none;
            background-color: transparent;
            outline: none;
        }

            .AddNewRowChair:hover i {
                transform: rotate(90deg);
            }

            .AddNewRowChair:focus i {
                color: darkgreen;
            }

        @@-webkit-keyframes rubberBand {
            0% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }

            30% {
                -webkit-transform: scale3d(1.25, 0.75, 1);
                transform: scale3d(1.25, 0.75, 1);
            }

            40% {
                -webkit-transform: scale3d(0.75, 1.25, 1);
                transform: scale3d(0.75, 1.25, 1);
            }

            50% {
                -webkit-transform: scale3d(1.15, 0.85, 1);
                transform: scale3d(1.15, 0.85, 1);
            }

            65% {
                -webkit-transform: scale3d(0.95, 1.05, 1);
                transform: scale3d(0.95, 1.05, 1);
            }

            75% {
                -webkit-transform: scale3d(1.05, 0.95, 1);
                transform: scale3d(1.05, 0.95, 1);
            }

            100% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }
        }

        @@keyframes rubberBand {
            0% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }

            30% {
                -webkit-transform: scale3d(1.25, 0.75, 1);
                transform: scale3d(1.25, 0.75, 1);
            }

            40% {
                -webkit-transform: scale3d(0.75, 1.25, 1);
                transform: scale3d(0.75, 1.25, 1);
            }

            50% {
                -webkit-transform: scale3d(1.15, 0.85, 1);
                transform: scale3d(1.15, 0.85, 1);
            }

            65% {
                -webkit-transform: scale3d(0.95, 1.05, 1);
                transform: scale3d(0.95, 1.05, 1);
            }

            75% {
                -webkit-transform: scale3d(1.05, 0.95, 1);
                transform: scale3d(1.05, 0.95, 1);
            }

            100% {
                -webkit-transform: scale3d(1, 1, 1);
                transform: scale3d(1, 1, 1);
            }
        }

        .rubberBand {
            -webkit-animation-name: rubberBand;
            animation-name: rubberBand;
        }

        .p-title {
            
            box-sizing: border-box;
            font-size: 14px;
            margin-left: 0;
            margin-right: 0;
            padding-bottom: 7.5px;
            color:white;
        }
        .border-dashed {
            border-bottom: 1px dashed #e9e9e9;
        }
        .p-title.col-sm-6 {
            padding-top:17.5px;
        }
        .strong {
            color: #ffffff;
            background-color: red;
            font-size: 20px;
            padding: 0 5px;
            border-radius: 0.25em;
        }
        .product-list {
            position: absolute;
            z-index: 3;
            width: 0;
            height: 100%;
            background-color: white;
            right: calc(100% + 15px);
            top: 0;
            transition: 0.5s;
            overflow-y: auto;
            font-size: 13px;
            border-radius:0.5em;
        }
            .product-list::-webkit-scrollbar {
                width: 5px;
            }

        /* Track */
            .product-list::-webkit-scrollbar-track {
                background: #f1f1f1;
                border-radius:0.5em;
            }

        /* Handle */
            .product-list::-webkit-scrollbar-thumb {
                background: #888;
            }

            /* Handle on hover */
                .product-list::-webkit-scrollbar-thumb:hover {
                    background: #555;
                }
        .product-list.active {
            width: 400px;
        }
            .product-list .product-list-content{
                padding:15px;
                width:100%;
            }
        .quantity {
            box-sizing: border-box;
            float: left;
            min-height: 1px;
            position: relative;
            width: 25%;
            text-align:center;
        }
        .minus {
            color: #9b9b9b !important;
            cursor: initial;
            -webkit-appearance: button;
            background-position: 0 0;
            border-color: transparent;
            box-sizing: border-box;
            color: #9b9b9b !important;
            cursor: pointer;
            font-size: 16px;
            margin: 0 5px 0 0;
            overflow: visible;
            text-transform: none;
            transform: scaleX(3);
        }
        .qty {
            border: 1px solid #e9e9e9;
            border-radius: 4px;
            box-sizing: border-box;
            display: inline-block;
            font-size: 16px;
            height: 32px;
            padding-top: 4px;
            text-align: center;
            width: 32px;
            margin:0 5px;
        }
        .plus {
            -webkit-appearance: button;
            background-position: 0 0;
            border-color: transparent;
            box-sizing: border-box;
            color: #fb4226 !important;
            cursor: pointer;
            font-size: 16px;
            margin: 0;
            overflow: visible;
            text-transform: none;
            transform: scale(1.5);
        }
        .title-product_list {
            margin-bottom: 15px;
            font-size: 18px;
            background-color: #f5f5f5;
            border-bottom: 1px dashed #ddd;
            padding: 3%;
            width: 100%;
        }
        .itemname{
            font-weight:600;
            font-size:16px;
        }
        .product-list-content img {
            border-width: 0;
            box-sizing: border-box;
            vertical-align: middle;
            width: 100%;
        }
        .item.row {
            margin-bottom: 10px;
        }
        input[type=number].qty::-webkit-outer-spin-button,
        input[type=number].qty::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        .payment:disabled {
            background: #afafaf;
        }
        .seat-cinema {
            border-width: 0;
            box-sizing: border-box;
            font-size: 100%;
            margin: 0;
            padding: 0;
            text-align: center;
            vertical-align: baseline;
            display: flex;
            justify-content: center;
            font-size:12px
        }
            .seat-cinema .seat-cinema_item{
                text-align:center;
                margin-right:20px;
            }
                .seat-cinema .seat-cinema_item div {
                    width: 20px;
                    height: 20px;
                    background-color: white;
                    margin: 5px auto;
                    border-radius:5px;
                }
                .seat-cinema span {
                    border-width: 0;
                    box-sizing: border-box;
                    font-size: 14px;
                    padding: 0;
                    vertical-align: baseline;
                }
    </style>
}
<!-- content -->
<section class="section details">
    <div class="container">
        <div class="row">
            <div class="col-12 col-lg-8 col-xl-8" style="z-index:2">
                <img src="~/Clients/img/screen.png" style="max-width:100%;" />
                <div class="tab-content" id="RoomChairBody">
                </div>
                <div class="row" style="height: 30px; margin-top: 30px;color: white;display: flex;justify-content: center;">
                    <div class="seat-cinema" id="ChairType">
                        <div class="seat-cinema_item">
                            <div style=""></div><span class="seat-cinema-selected">Ghế đang chọn</span>
                        </div>
                        <div class="seat-cinema_item">
                            <div style=""></div><span class="seat-cinema-selected">Ghế đang chọn</span>
                        </div>
                        <div class="seat-cinema_item">
                            <div style=""></div><span class="seat-cinema-selected">Ghế đang chọn</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-4 col-xl-4" style="position:relative;z-index:4;box-shadow: -6px 2px 15px rgba(140, 121, 121, 0.3);">
                <div class="row" style="z-index:4;padding:10px;padding-top:35px;">
                    <!-- section title -->
                    <div class="col-12 ">
                        <h2 class="section__title section__title--sidebar" style="font-size:18px;margin-bottom:10px" id="TitleMoive">
                        </h2>
                        <p class="p-title" id="Address"></p>
                        <p class="p-title" id="ShowTime">T</p>
                    </div>
                    <div class="col-12 ">
                        <div class="border-dashed">
                            <p class="p-title col-sm-6">Email: <span style="font-size:15px;font-weight:600"></span></p>
                            <p class="p-title col-sm-6" id="CustomerEmail" style="text-align:right">...</p>
                        </div>
                    </div>
                    <!-- end section title -->
                    <div class="col-12 ">
                        <div class="border-dashed">
                            <p class="p-title col-sm-6">Ghế: <span id="Chair" style="font-size:15px;font-weight:600"></span></p>
                            <p class="p-title col-sm-6" id="PriceChair" style="text-align:right" onchange="OnchangePrice();">0</p>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="border-dashed">
                            <p class="p-title col-sm-6">
                                <img class="icon-combo" src="~/Clients/icon/popcorn.png" style="margin-right: 9px; width: 17px; height: 22px;cursor:pointer;" />Thức Ăn:<span id="Combo"></span>
                            </p>
                            <p class="p-title col-sm-6" id="PriceCombo" style="text-align:right" onchange="OnchangePrice();">0</p>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="border-dashed">
                            <p class="p-title col-sm-6">Tổng:</p>
                            <p class="p-title col-sm-6" id="TotalPrice" style="text-align:right">0</p>
                        </div>
                    </div>
                    <div class="col-12">
                        <button class="header__sign-in payment" type="submit" disabled onclick="return ExecuteBill();" style="margin:0 auto;width:100%;">
                            <i class="icon ion-ios-log-in"></i>
                            <span>Thanh Toán</span>
                        </button>
                    </div>

                </div>
                    <div class="row product-list">
                        <div class="product-list-content" id="ContentProductList">
                            <div class="title-product_list">Sản Phẩm</div>
                            <div>
                                <div class="item row">
                                    <div class="col-sm-2 col-xs-3 logoitem"><img src="https://www.cgv.vn/media/concession/app/5e0b46f7da51c_1577797368.png" style="border-width: 0; box-sizing: border-box; vertical-align: middle; width: 100%;"></div>
                                    <div class="col-sm-7 col-xs-5">
                                        <div class="itemname" data-toggle="collapse" data-target="#description561297">
                                            <i name=" icon information-circle-outline"></i>MY COMBO MR 2020 (ONLINE)
                                        </div>
                                        <div id="description561297" class="desc collapse">
                                            1 bắp vừa + 1 nước siêu lớn. Nhận trong ngày xem phim*
                                            ** Miễn phí đổi vị bắp Dâu, Phô mai và Caramel **
                                        </div>
                                        <div style="color:#44c020;font-size:18px;font-weight:500">79.000 đ</div>
                                    </div>
                                    <div class="col-sm-3 col-xs-4 opnum quantity">
                                        <button class="minus">-</button>
                                        <input type='text' name='quantity' value='0' class='qty' />
                                        <button class="plus">+</button>
                                    </div>
                                </div>
                                <div class="item row">
                                    <div class="col-sm-2 col-xs-3 logoitem"><img src="https://www.cgv.vn/media/concession/app/5e0b46f7da51c_1577797368.png" style="border-width: 0; box-sizing: border-box; vertical-align: middle; width: 100%;"></div>
                                    <div class="col-sm-7 col-xs-5">
                                        <div class="itemname" data-toggle="collapse" data-target="#description561297">
                                            <i name=" icon information-circle-outline"></i>MY COMBO MR 2020 (ONLINE)
                                        </div>
                                        <div id="description561297" class="desc collapse">
                                            1 bắp vừa + 1 nước siêu lớn. Nhận trong ngày xem phim*
                                            ** Miễn phí đổi vị bắp Dâu, Phô mai và Caramel **
                                        </div>
                                        <div style="color:#44c020;font-size:18px;font-weight:500">79.000 đ</div>
                                    </div>
                                    <div class="col-sm-3 col-xs-4 opnum quantity">
                                        <button class="minus">-</button>
                                        <input type='text' name='quantity' value='0' class='qty' />
                                        <button class="plus">+</button>
                                    </div>
                                </div>
                                <div class="item row">
                                    <div class="col-sm-2 col-xs-3 logoitem">
                                    <img src="https://www.cgv.vn/media/concession/app/5e0b46f7da51c_1577797368.png" ></div>
                                    <div class="col-sm-7 col-xs-5">
                                        <div class="itemname" data-toggle="collapse" data-target="#description561297">
                                            <i name=" icon information-circle-outline"></i>MY COMBO MR 2020 (ONLINE)
                                        </div>
                                        <div id="description561297" class="desc collapse">
                                            1 bắp vừa + 1 nước siêu lớn. Nhận trong ngày xem phim*
                                            ** Miễn phí đổi vị bắp Dâu, Phô mai và Caramel **
                                        </div>
                                        <div style="color:#44c020;font-size:18px;font-weight:500">79.000 đ</div>
                                    </div>
                                    <div class="col-sm-3 col-xs-4 opnum quantity">
                                        <button class="minus">-</button>
                                        <input type='text' name='quantity' onchange="OnchangeProduct();" value='0' class='qty' />
                                        <button class="plus">+</button>
                                    </div>
                                </div>
                                <div class="item row">
                                    <div class="col-sm-2 col-xs-3 logoitem"><img src="https://www.cgv.vn/media/concession/app/5e0b46f7da51c_1577797368.png" style="border-width: 0; box-sizing: border-box; vertical-align: middle; width: 100%;"></div>
                                    <div class="col-sm-7 col-xs-5">
                                        <div class="itemname" data-toggle="collapse" data-target="#description561297">
                                            <i name=" icon information-circle-outline"></i>MY COMBO MR 2020 (ONLINE)
                                        </div>
                                        <div id="description561297" class="desc collapse">
                                            1 bắp vừa + 1 nước siêu lớn. Nhận trong ngày xem phim*
                                            ** Miễn phí đổi vị bắp Dâu, Phô mai và Caramel **
                                        </div>
                                        <div style="color:#44c020;font-size:18px;font-weight:500">79.000 đ</div>
                                    </div>
                                    <div class="col-sm-3 col-xs-4 opnum quantity">
                                        <button class="minus">-</button>
                                        <input type='text' name='quantity' value='0' class='qty' />
                                        <button class="plus">+</button>
                                    </div>
                                </div>
                            </div>
                            <div class="title-product_list">Sản Phẩm</div>
                            <div>
                                <div class="item row">
                                    <div class="col-sm-2 col-xs-3"><img src="https://www.cgv.vn/media/concession/app/5e0b46f7da51c_1577797368.png" style="border-width: 0; box-sizing: border-box; vertical-align: middle; width: 100%;"></div>
                                    <div class="col-sm-7 col-xs-5">
                                        <div class="itemname" data-toggle="collapse" data-target="#description561297">
                                            <i name=" icon information-circle-outline"></i>MY COMBO MR 2020 (ONLINE)
                                        </div>
                                        <div id="description561297" class="desc collapse">
                                            1 bắp vừa + 1 nước siêu lớn. Nhận trong ngày xem phim*
                                            ** Miễn phí đổi vị bắp Dâu, Phô mai và Caramel **
                                        </div>
                                        <div style="color:#44c020;font-size:18px;font-weight:500">79.000 đ</div>
                                    </div>
                                    <div class="col-sm-3 col-xs-4 opnum quantity">
                                        <button class="minus">-</button>
                                        <input type='text' name='quantity' value='0' class='qty' />
                                        <button class="plus">+</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </div>
    </div>
</section>
<!-- end content -->
<div id="div" hidden></div>
@section Script{
    <script>
        var ScheduleID = @ViewBag.ScheduleDetailID;
        var Email = '@ViewBag.Email';
        var DataBillTicket = [];
        var DataBillProduct = [];
        var PriceTicket = 0;
        var PriceProduct = 0;
        var PriceTicketType = 0;
        var DataMovie;
        var Total;
        var DataProduct;
        var DataProductType;
        $(document).ready(function () {
            LoadDataScheduleMovie();
            $("#CustomerEmail").text(Email);
            $('img.icon-combo').on('click', function () {
                $('.product-list').toggleClass('active');
            });
        });
        function OnclickChairLabel() {
            $(".seat label").click(function () {
                var NameChair = $(this).attr("for");
                $('#' + NameChair +':enabled').prop('checked',function () {
                    var idChair = $(this).attr('data-chair');
                    if (removeItemsById(DataBillTicket, idChair) == 0) {
                        var rowchair = Number($(this).parent().parent().attr('data-rowchair'));
                        var price = $(this).attr('data-price');
                        var typeChair = $(this).attr('data-typechair');
                        var item = {
                            NameChair: NameChair,
                            RowChair: rowchair,
                            Chair: idChair,
                            Price: price,
                            TypeChair: typeChair,
                        };
                        DataBillTicket.push(item);
                    }
                    RenderPriceTicket(DataBillTicket, "Chair", "PriceChair");
                });
                if (DataBillTicket.length == 8) {
                    notiWarning("Số ghế được chọn tối đa không quá 8 ghế ngồi !");
                    return;
                }
                if (DataBillTicket.length != 0) {
                    $('.payment').removeAttr("disabled");
                }
                else $('.payment').attr("disabled","");
            });
        }
        function RenderPriceTicket(data, idNameChair, idPriceChair) {
            var idChair = document.getElementById(idNameChair);
            var idPrice = document.getElementById(idPriceChair);
            if (idChair != null && idPrice != null) {
                idChair.innerHTML = '';
                idPrice.innerHTML = '';
                PriceTicket = 0;
                let StringChair = '';
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        PriceTicket += Number(item.Price) + Number(PriceTicketType);
                        StringChair += item.NameChair + ',';
                    }
                }

                document.getElementById(idNameChair).innerHTML = StringChair;
                $('#' + idPriceChair).trigger('change');
                document.getElementById(idPriceChair).innerHTML = Divide(PriceTicket);
            }
        }
        function OnchangePrice() {
            Total = PriceTicket + PriceProduct;
            $('#TotalPrice').text(Divide(Total));
        }
        function removeItemsById(arr, id) {
            var LengthArr = arr.length;
            var result = 0;
            if (LengthArr > 0) {
                while (LengthArr--) {
                    var ChairId = arr[LengthArr];
                    if (Number(ChairId.Chair) == Number(id)) {
                        arr.splice(LengthArr, 1);
                        result = 1;
                        return result;
                    }
                }
            }
            return result;
        }
        function LoadDataScheduleMovie() {
            $.ajax({
                type: 'GET',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                url: "/Checkout/ScheduleMovie/" + ScheduleID,
                async: true,
                success: function (result) {
                     DataMovie = result.Table;
                    if (DataMovie.length > 0) {
                        $('#TitleMoive').html('<strong class="strong">' + DataMovie[0].TicketType + '</strong> ' + DataMovie[0].MovieName);
                        $('#Address').text(DataMovie[0].Address + ' - ' + DataMovie[0].Room);
                        $('#ShowTime').text(DataMovie[0].ShowTime);
                        PriceTicketType = DataMovie[0].PriceTicketType;
                    }
                    let NameRow = result.Table1;
                    let Chair = result.Table2;
                    RenderRoomChair(NameRow, Chair, "RoomChairBody");
                    OnclickChairLabel();
                    DataProductType = result.ProductType;
                    DataProduct = result.Product;
                    RenderProductList(DataProductType, DataProduct, "ContentProductList");
                    QuantityProduct();
                    let DataChairType = result.ChairType;
                    RenderChairType(DataChairType, "ChairType");
                }
            });
        }
        function RenderChairType(data, id) {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        let tr =
                            '<div style="background-color:' + item.ColorCode + '"></div><span class="seat-cinema-selected">' + item.NameChair + '</span>'
                        stringContent = stringContent + '<div class="seat-cinema_item">' + tr + '</div>';
                    }
                }
                stringContent += '<div class="seat-cinema_item">'
                    + '<div style="background:#e7eaec !important;opacity:.8"></div>'
                    + '<span class="seat-cinema-selected">Ghế đã có người chọn</span>'
                    + '</div><div class="seat-cinema_item">'
                    + '<div style="background:#44c020"></div>'
                    + '<span class="seat-cinema-selected">Ghế đang chọn</span></div>'
                document.getElementById(id).innerHTML = stringContent;
            }
        }
        function RenderRoomChair(RowChair, Chair, id) {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (Chair && Chair.length > 0) {
                    for (var i = 0; i < RowChair.length; i++) {
                        let rc = RowChair[i];
                        let items = Chair.filter(data => data.RowChair == RowChair[i].ID);
                        let tr = '<li class="seat"><label for="' + rc.NameRow + '">' + rc.NameRow + '</label></li>';
                        for (var j = 0; j < items.length; j++) {
                            items = items.sort(function (a, b) { return a.ColumnChair - b.ColumnChair; })
                            item = items[j];
                            tr += '<li class="seat" style="visibility:' + item.VisibilityChair + ';flex-grow:' + item.Total + ';max-width:calc(40px * ' + item.Total + ')" >'
                                + '<input type="checkbox" class="' + item.selected + '" ' + ((item.selected == "") ? "" : "disabled") +'  data-typechair="' + item.TypeChairID + '" data-chair="' + item.ID + '" value="' + item.NameRow + '" data-price="' + item.PriceChair + '" id="' + item.NameRow + item.ColumnChair + '" ' + item.DisabledChair + '/>'
                                + '<label for="' + item.NameRow + item.ColumnChair + '" style="background:' + item.ColorCode + '"></label></li>'
                        }
                        stringContent = stringContent + '<li class="row"><ol class="seats" data-rowchair="'+rc.ID+'" type="' + rc.NameRow + '">' + tr + '</ol></li>';
                    }
                }
                document.getElementById(id).innerHTML = stringContent;
            }
        }
        function RenderProductList(dataProductType, dataProduct, id) {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (dataProductType && dataProductType.length > 0) {
                    for (var i = 0; i < dataProductType.length; i++) {
                        let rowType = dataProductType[i];
                        let title = '<div class="title-product_list">' + rowType.Name + '</div>';
                        let items = dataProduct.filter(word => word["TypeID"] == rowType.ID);
                        let content = '';
                        for (var j = 0; j < items.length; j++) {
                            let item = items[j];
                            content += '<div class="item row">'
                                + '<div class="col-sm-2 col-xs-3 logoitem">'
                                + ' <img src="' + item.Image + '" ></div>'
                                + '<div class="col-sm-7 col-xs-5">'
                                + '<div class="itemname" data-toggle="collapse">'
                                + '<i name=" icon information-circle-outline"></i>' + item.Name + '</div>'
                                + '<div style="color:#44c020;font-size:16px;font-weight:600">' + Divide(item.Price) + '</div>'
                                + '</div>'
                                + '<div class="col-sm-3 col-xs-4 opnum quantity">'
                                + '<button class="minus">-</button>'
                                + '<input type="number" min="0" name="quantity" onchange="OnchangeProduct(' + item.ID + ');" id="p-' + item.ID + '" data-price="' + item.Price + '" value="0" class="qty" />'
                                + '<button class="plus">+</button>'
                                + '</div>'
                                + '</div>'
                        }
                        stringContent = stringContent + title + '<div class"content-item">' + content + '</div>';
                    }
                }
                document.getElementById(id).innerHTML = stringContent;
            }
        }
        function QuantityProduct() {
            $('.quantity').on('click', '.plus', function (e) {
                let $input = $(this).prev('input.qty');
                let val = parseInt($input.val());
                $input.val(val + 1).change();
            });

            $('.quantity').on('click', '.minus',
                function (e) {
                    let $input = $(this).next('input.qty');
                    var val = parseInt($input.val());
                    if (val > 0) {
                        $input.val(val - 1).change();
                    }
                });
        }
        function OnchangeProduct(id) {
            let Quantity = $('#p-' + id).val();
            let Price = Number($('#p-' + id).attr('data-price'));
            removeItemProductById(DataBillProduct, id);
            if (Quantity > 0) {
                var item = {
                    ProductID:id,
                    Price: Price,
                    Quan: Quantity
                };
                DataBillProduct.push(item);
            }
            RenderPriceProduct(DataBillProduct,"PriceCombo");
        }
        function RenderPriceProduct(data,id) {
            var priceCombo = document.getElementById(id);
            if (priceCombo != null) {
                if (data && data.length > 0) {
                    PriceProduct = 0;
                    for (var i = 0; i < data.length; i++) {
                        var item = data[i];
                        PriceProduct += (Number(item.Price) * Number(item.Quan));
                    }
                }
                document.getElementById(id).innerHTML = PriceProduct;
                OnchangePrice();
            }
        }
        function removeItemProductById(arr, id) {
            var LengthArr = arr.length;
            if (LengthArr > 0) {
                while (LengthArr--) {
                    var productID = arr[LengthArr];
                    if (Number(productID.ProductID) == Number(id)) {
                        arr.splice(LengthArr, 1);
                    }
                }
            }
        }
        function ExecuteBill() {
            if (DataBillTicket.length > 0) {
                var data = new Object();
                data.ScheduleID = Number(DataMovie[0].ID);
                data.Quan = Number(DataBillTicket.length);
                data.Price = parseFloat(Total);
                $.ajax({
                    url: "/Checkout/ExecuteBill",
                    dataType: "json",
                    type: "POST",
                    data: {
                        data: JSON.stringify(data)
                        , Email: Email
                    },
                    async: true,
                    error: function (error) {
                        alert(error);
                    },
                    success: function (result) {
                        if (result != "0") {
                            if (ExecuteBillTicket(result) == 0 && ExecuteBillProduct(result)==0) {
                                notiSuccess("Hóa đơn bạn đặt thành công");
                            }
                            else notiError("Hóa đơn bạn đặt thất bại");
                        }
                    },
                    beforeSend: function () {
                        $('.loader').css("display","flex");
                    },
                    complete: function () {
                        $('.loader').css("display", "none");
                    }
                });
            }
            else notiWarning("Vui lòng chọn chỗ ngồi");
            return false;
        }
        function ExecuteBillTicket(idBill) {
            let TotalInsert = 0;
            let ticketlength = DataBillTicket.length;
            if (ticketlength > 0) {
                for (var i = 0; i < ticketlength; i++) {
                    let item = DataBillTicket[i];
                    item.Bill_ID = Number(idBill);
                    if (ExecuteBillTicketInsert(item)==0) {
                        TotalInsert+=1;
                    }
                }
            }
            return  (TotalInsert == ticketlength) ? 1 : 0;
        }
        function ExecuteBillTicketInsert(data) {
            $.ajax({
                url: "/Checkout/ExecuteBillTicket",
                dataType: "json",
                type: "POST",
                data: {
                    data: JSON.stringify(data)
                },
                async: false,
                error: function (error) {
                    return 1;
                },
                success: function (result) {
                    console.log(result);
                    return Number(result);
                }
            });
        }
        function ExecuteBillProduct(idBill) {
            let TotalInsert = 0;
            let productlength = DataBillProduct.length;
            if (productlength > 0) {
                for (var i = 0; i < productlength; i++) {
                    let item = DataBillProduct[i];
                    item.Bill_ID = Number(idBill);
                    ExecuteBillProductInsert(item);
                }
            }
            return (TotalInsert == productlength) ? 1 : 0;
        }
        function ExecuteBillProductInsert(data) {
            $.ajax({
                url: "/Checkout/ExecuteBillProduct",
                dataType: "json",
                type: "POST",
                data: {
                    data: JSON.stringify(data)
                },
                async: true,
                error: function (error) {

                },
                success: function (result) {
                }
            });
        }
    </script>  
}